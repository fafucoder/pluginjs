---
title: LinkPicker
layout: plugin
styles:
- ../../plugins/popover/css/popover.css
- ../../plugins/pop-dialog/css/pop-dialog.css
- ../../plugins/dropdown/css/dropdown.css
- ../../css/font-awesome.min.css
- ../../plugins/radio/css/radio.css
- ../../plugins/link-picker/css/link-picker.css
scripts:
- ../../vendor/popper.js
- ../../plugins/link-picker/link-picker.js
---
<section>
  <h3>Default</h3>
  <input type="text" class="link-picker-default" />
  {{#code}}
  <input type="text" class="link-picker-default" />
  <script>
    (function() {
      Pj.linkPicker('.link-picker-default');
    })();

  </script>
  {{/code}}
  <script>
    (function () {
      Pj.linkPicker('.link-picker-default');
    })();

  </script>
</section>

<section>
  <h3>Initialized by input value</h3>
  <input type="text" class="example-input" value='{"source":"scroll","target":"#top", "title":"sdfsdf"}'/>
  {{#code}}
  <input type="text" class="example-input" value='{"source":"scroll","target":"#top", "title":"sdfsdf"}'/>
  <script>
    (function() {
      Pj.linkPicker('.example-input');
    })();

  </script>
  {{/code}}
</section>

<section>
  <h3>Locale</h3>
  <input type="text" class="link-picker-locale" />
  {{#code}}
  <input type="text" class="link-picker-locale" />
  <script>
    (function() {
      Pj.linkPicker('.link-picker-locale');
    })();

  </script>
  {{/code}}
</section>
<section>
  <h3>API</h3>
  <input type="text" class="example-api">
  <div>
    <button class="btn api-init">init()</button>
    <button class="btn api-destroy">destroy()</button>
    <button class="btn api-disable">disable()</button>
    <button class="btn api-enable">enable()</button>
    <button class="btn api-set">set(data)</button>
    <button class="btn api-get">get()</button>
    <button class="btn api-val">val()</button>
    <button class="btn api-val-set">val(data)</button>
  </div>
  <div class="console"></div>
</section>

<script>
  (function() {
    let sources = {
      'content': {
        label: 'site content',
        preview: '{type}: {content}',
        fields(data) {
          return [{
            name: 'type',
            label: 'content type',
            type: 'dropdown',
            data: data.type,
            options: {
              // dropdown's options
            }
          }, {
            name: 'content',
            label: 'content',
            type: 'dropdown',
            connect: 'type',
            data: data.content,
            options: {
              placeholder: 'Choose a content'
            }
          }, {
            name: 'target',
            label: 'open mode',
            type: 'dropdown',
            data: {
              active: '_self',
              values: {
                _self: 'same window',
                _blank: 'new window'
              }
            }
          }, {
            name: 'title',
            label: 'link title',
            type: 'input',
            data: '',
            options: {
              placeholder: 'input title'
            }
          }]
        }
      },
      'archive': {
        label: 'site archive',
        preview:'{type}: {content}',
        fields(data) {
          return [{
            name: 'type',
            label: 'archive type',
            type: 'dropdown',
            data: data.type,
            options: {
              // dropdown's options
            }
          }, {
            name: 'content',
            label: 'content',
            type: 'dropdown',
            connect: 'type',
            data: data.content,
            options: {
              placeholder: 'Choose a content'
            }
          }, {
            name: 'target',
            label: 'open mode',
            type: 'dropdown',
            data: {
              active: '_self',
              values: {
                _self: 'same window',
                _blank: 'new window'
              }
            }
          }, {
            name: 'title',
            label: 'link title',
            type: 'input',
            data: '',
            options: {
              placeholder: 'input title'
            }
          }]
        }
      },
      'url': {
        label: 'external url',
        preview:'{url}',
        fields(data) {
          return [{
            name: 'url',
            label: 'url',
            type: 'input',
            data: data.url,
            options: {
              placeholder: 'input url'
            }
          }, {
            name: 'target',
            label: 'open mode',
            type: 'dropdown',
            data: {
              active: '_self',
              values: {
                _self: 'same window',
                _blank: 'new window'
              }
            }
          }, {
            name: 'title',
            label: 'link title',
            type: 'input',
            data: '',
            options: {
              placeholder: 'input title'
            }
          }]
        }
      },
      'scroll': {
        label: 'scroll to target',
        preview:'scroll to {target}',
        fields(data) {
          return [{
            name: 'target',
            label: 'target',
            type: 'radio',
            data: data.target,
            options: {
              // asRadio's options
            }
          }, {
            name: 'title',
            label: 'link title',
            type: 'input',
            data: '',
            options: {
              placeholder: 'input title'
            }
          }]
        }
      }
    }

    let datas = {
      'content': {
        type: {
          active: 'page',
          values: {
            'page': 'page',
            'post': 'post',
            'portfolio': 'portfolio',
            'categogry': 'categogry archive',
            'tag': 'tag archive'
          }
        },
        content: {
          active: '',
          values(type){
            if(type === 'page'){
              return {
                active:'page-2',
                values: {
                  'page-1': 'sample page 1',
                  'page-2': 'sample page 2',
                  'page-3': 'sample page 3'
                }
              }
            }

            if(type === 'post'){
              return {
                active: 'post-1',
                values: {
                  'post-1': 'sample post 1',
                  'post-2': 'sample post 2',
                  'post-3': 'sample post 3'
                }
              }
            }

            return {
              active: 'other-3',
              values: {
                'other-1': 'sample other 1',
                'other-2': 'sample other 2',
                'other-3': 'sample other 3'
              }
            }
            //return $.getJson({
            //  url: `http://example.com/getData.php?type=${type}`
            //})
          }
        }
      },
      'archive': {
        type: {
          active: 'categogry',
          values: {
            'categogry': 'categogry archive',
            'tag': 'tag archive'
          }
        },
        content: {
          acitve: '',
          values(type){
            if(type === 'categogry'){
              return {
                active:'',
                values: {
                'music': 'Music',
                'moive': 'Moive'
                }
              }
            }

            if(type === 'tag'){
              return {
                active: '',
                values: {
                'talk-show': 'Talk show',
                'tour': 'Tour'
                }
              }
            }
            //return $.getJson({
            //  url: `http://example.com/getData.php?type=${type}`
            //})
          }
        }
      },
      'url': {
        'url': ''
      },
      'scroll': {
        'target': {
          active: 'top',
          values: {
            'top': 'top of page',
            'bottom': 'bottom of page',
            'id': 'target ID'
          }
        }
      }
    }


    Pj.linkPicker.registerSources(sources);
    Pj.linkPicker.registerDatas(datas);

    Pj.linkPicker('.example-input');

    var $linkPicker = {}

    document.querySelector('.api-init').addEventListener('click', function() {
      $linkPicker = Pj.linkPicker('.example-api', {
        // sources: ['content', 'archive'],
        onReady: function() {
          log('ready', 'event');
        },
        onDestroy: function() {
          log('destroy', 'event');
        },
        onEnable: function() {
          log('enable', 'event');
        },
        onDisable: function() {
          log('disable', 'event');
        },
      })
    })

    document.querySelector('.api-destroy').addEventListener('click', function() {
      $linkPicker.destroy();
    })

    document.querySelector('.api-disable').addEventListener('click', function() {
      $linkPicker.disable();
    })

    document.querySelector('.api-enable').addEventListener('click', function() {
      $linkPicker.enable();
    })

    document.querySelector('.api-get').addEventListener('click', function() {
      log(JSON.stringify($linkPicker.get()), 'get');
    })

    document.querySelector('.api-val').addEventListener('click', function() {
      // log(JSON.stringify($linkPicker.val()), 'val');
      $linkPicker.setSourceFieldData('content', 'content', {name: 'a', age: 1})
    })

    document.querySelector('.api-set').addEventListener('click', function() {
      var link = '{"source":"scroll","target":"#top", "title":"sdfsdf"}';
      $linkPicker.val(link)
      log(link, 'set');
    })

    Pj.linkPicker('.link-picker-locale', {
      locale: 'zh'
    });

  })();

</script>
