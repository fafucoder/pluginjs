---
title: TimePicker
layout: plugin
styles:
- ../../plugins/dropdown/css/dropdown.css
- ../../plugins/time-picker/css/time-picker.css
scripts:
- ../../plugins/time-picker/time-picker.js
---
<!--

-->
<section>
  <h3>Default</h3>
  {{#code}}
  Pj.timePicker('.time-picker', )
  {{/code}}
  <div>
    <input type="text" class="time-picker">
  </div>

  <h3>12-Hour Format</h3>
  {{#code}}
  Pj.timePicker('.time-picker-12', {
    use24HourFormat: false,
  })
  {{/code}}
  <div>
    <input class="time-picker-12">
  </div>
  <h3>Range</h3>
  {{#code}}
  Pj.timePicker('.time-picker-finish', 'observeOtherTimePicker', Pj.timePicker('.time-picker-start'))
  {{/code}}
  <div style="margin-bottom: 20px;">
    <input class="time-picker time-picker-start">
  </div>
  <div style="margin-bottom: 20px;">
    <input class="time-picker time-picker-finish">
  </div>
  {{#code}}
  Pj.timePicker('.time-picker-min', {
    minTime: '10:00',
    maxTime: '22:00'
  })
  {{/code}}
  <div>
    <input class="time-picker-range">
  </div>

  <h3>Step</h3>
  {{#code}}
  Pj.timePicker('.time-picker-step', {
    step: 80,
  })
  {{/code}}
  <div>
    <input class="time-picker-step">
  </div>

  <h3>Step Function</h3>
  {{#code}}
  Pj.timePicker('.time-picker-step-func', {
    step: function(i) {
      return (i % 2) ? 15 : 45;
    },
  })
  {{/code}}
  <div>
    <input class="time-picker-step-func">
  </div>
</section>

<section>
  <h3>Initialized by input value</h3>
  <div class="example">
    <input type="text" class="example-input" value="12:00">
  </div>

  <script>
    (function(){
      Pj.timePicker('.example-input', );
    })();
  </script>
</section>

<section>
  <h3>Api</h3>
  <div class="example">
    <input type="text" class="example-api">
  </div>

  <div class="console"></div>
  <div class="pad-top-20">
    <button class="btn api-init">init</button>
    <button class="btn api-destroy">destroy</button>
    <button class="btn api-enable">enable</button>
    <button class="btn api-disable">disable</button>
    <button class="btn api-get">get()</button>
    <button class="btn api-set">set(time)</button>
    <button class="btn api-val">val()</button>
    <button class="btn api-val-set">val(time)</button>
  </div>
</section>

<script>
(function() {
  Pj.timePicker('.time-picker');
  Pj.timePicker('.time-picker-12', {
    use24HourFormat: false,
  })

  Pj.timePicker('.time-picker-finish', 'observeOtherTimePicker', Pj.timePicker('.time-picker-start'))

  Pj.timePicker('.time-picker-12', {
    use24HourFormat: false,
  })

  Pj.timePicker('.time-picker-range', {
    minTime: '10:00',
    maxTime: '22:00'
  })

  Pj.timePicker('.time-picker-step', {
    step: 80
  })

  Pj.timePicker('.time-picker-step-func', {
    step: function(i) {
      return (i % 2) ? 15 : 45;
    },
  })

  var api = {}
  function init() {
    api = Pj.timePicker('.example-api', )
  }

  document.querySelector('.api-init').addEventListener('click', function() {
    init();
  });

  document.querySelector('.api-destroy').addEventListener('click', function() {
    api.destroy();
    console.log('','api.destroy()');
  });

  document.querySelector('.api-enable').addEventListener('click', function() {
    api.enable();
    console.log('', 'api.enable()');
  });

  document.querySelector('.api-disable').addEventListener('click', function() {
    api.disable();
    console.log('', 'api.disable()');
  });

  document.querySelector('.api-get').addEventListener('click', function() {
    console.log(api.get(), 'api.get()');
  });

  document.querySelector('.api-set').addEventListener('click', function() {
    api.set('12:00');
    console.log('set(12:00)', 'api.set(12:00)');
  });

  document.querySelector('.api-val').addEventListener('click', function() {
    console.log(api.val(), 'api.val()');
  });

  document.querySelector('.api-val-set').addEventListener('click', function() {
    api.val('12:00');
    console.log('val(12:00)', 'api.val(12:00)');
  });
})();
</script>
