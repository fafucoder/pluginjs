---
title: Fullscreen
layout: plugin
scripts:
- ../../plugins/fullscreen/fullscreen.js
---

<div class="fullscreen">
  <div>
    <h3>Fullscreen</h3>
    <button class="btn global-fullscreen-enabled">enabled()</button>

    <button class="btn global-fullscreen-isFullscreen">isFullscreen()</button>

    <button class="btn global-fullscreen-exit">exit()</button>

    <button class="btn global-fullscreen-element">element()</button>
  </div>
  <div class="top-gap">
    <h3>Body Fullscreen</h3>
    <button class="btn fullscreen-request">request()</button>

    <button class="btn fullscreen-exit">exit()</button>

    <button class="btn fullscreen-toggle">toggle()</button>

    <button class="btn fullscreen-isFullscreen">isFullscreen()</button>
  </div>

  <div class="top-gap">
    <h3>Element Fullscreen</h3>
    <button class="btn fullscreen-element-request">request()</button>

    <button class="btn fullscreen-element-exit">exit()</button>

    <button class="btn fullscreen-element-toggle">toggle()</button>

    <button class="btn fullscreen-element-isFullscreen">isFullscreen()</button>
  </div>
</div>

<script>
$(function(){
  $('.global-fullscreen-enabled').on('click', function() {
    console.info('check enabled: ' + Pj.Fullscreen.enabled());
  });

  $('.global-fullscreen-isFullscreen').on('click', function() {
    console.info('check isFullscreen: ' + Pj.Fullscreen.isFullscreen());
  });

  $('.global-fullscreen-exit').on('click', function() {
    Pj.Fullscreen.exit();
  });

  $('.global-fullscreen-element').on('click', function() {
    console.info('get fullscreen element: ');
    console.info(Pj.Fullscreen.element());
  });

  /* body fullscreen */
  var fs = new Pj.Fullscreen();

  fs.on('request', function(){
    console.info('request document');
  });

  fs.on('exit', function(){
    console.info('exit document');
  });

  fs.on('error', function(){
    console.info('error document');
  });

  $('.fullscreen-request').on('click', function() {
    fs.request();
  });

  $('.fullscreen-exit').on('click', function() {
    fs.exit();
  });

  $('.fullscreen-toggle').on('click', function() {
    fs.toggle();
  });

  $('.fullscreen-isFullscreen').on('click', function() {
    console.info('check isFullscreen: ' + fs.isFullscreen());
  });

  /* element fullscreen */
  var fse = new Pj.Fullscreen(document.querySelector('.fullscreen'));

  fse.on('request', function(){
    console.info('request element');
  });

  fse.on('exit', function(){
    console.info('exit element');
  });

  fse.on('error', function(){
    console.info('error element');
  });

  $('.fullscreen-element-request').on('click', function() {
    fse.request();
  });

  $('.fullscreen-element-exit').on('click', function() {
    fse.exit();
  });

  $('.fullscreen-element-toggle').on('click', function() {
    fse.toggle();
  });

  $('.fullscreen-element-isFullscreen').on('click', function() {
    console.info('check isFullscreen: ' + fse.isFullscreen());
  });
});
</script>
