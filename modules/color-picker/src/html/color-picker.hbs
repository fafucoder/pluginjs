---
title: ColorPicker
layout: plugin
styles:
- ../../plugins/tooltip/css/tooltip.css
- ../../plugins/scrollable/css/scrollable.css
- ../../plugins/dropdown/css/dropdown.css
- ../../plugins/color-picker/css/color-picker.css
scripts:
- ../../plugins/color-picker/color-picker.js
---

<section>
  <h2>Basic</h2>
  <input type="text" class="example-api" style="display: block;"/>
  <button class='btn api-init'>init()</button>
  <button class='btn api-set'>set</button>
  <button class='btn api-get'>get</button>
  <button class='btn api-val'>val</button>
  <button class='btn api-val-set'>val set</button>
  <button class='btn api-clear'>clear</button>
  <button class="btn api-destroy">destroy()</button>
  <button class="btn api-enable">enable()</button>
  <button class="btn api-disable">disable()</button>
  <div class="console"></div>
</section>

<section>
  <h2>Initialized by input value</h2>
  <input type="text" class="input" value="red" />
</section>

<section>
  <h2>Locale</h2>
  <input type="text" class="locale" />
</section>

<section>
  <h2>Module</h2>
  <p>you can add/remove ['collection', 'solid', 'gradient'] Modules.</p>
  <section>
    <h3>only 'collection' Module</h3>
    <input type="text" class="module-collection">
  </section>
  <section>
    <h3>'solid' and 'collection' Modules</h3>
    <input type="text" class="module-solid-gradient">
  </section>
</section>

<section>
  <h2>Solid Module mode</h2>
  <section>
    <h3>Full mode</h3>
    <input type="text" class="solid-full">
  </section>
  <section>
    <h3>Default mode</h3>
    <input type="text" class="solid-default">
  </section>
  <section>
    <h3>Sample mode</h3>
    <input type="text" class="solid-sample">
  </section>
</section>
<section>
  <h2>Solid Module custom module</h2>
  <p>you can set [saturation, hue, alpha, hex] modules on/off.</p>
  <section>
    <h3>{saturation:true, hue:true} other false.</h3>
    <input type="text" class="solid-modules">
  </section>
</section>
<section>
  <h2>Wordpress demo</h2>
  <p>you can set [saturation, hue, alpha, hex] modules on/off.</p>
  <section>
    <input type="text" id="colorpicker" name="colorpicker" data-plugin="colorpicker" data-theme="null" data-locale="en" data-placeholder="choose color" data-module="[&quot;collection&quot;,&quot;solid&quot;,&quot;gradient&quot;]" data-solidmode="{&quot;saturation&quot;:true,&quot;hue&quot;:true,&quot;alpha&quot;:true,&quot;hex&quot;:true}" data-gradientmode="linear" data-defaultcolor="#000" data-color="{&quot;format&quot;:false,&quot;alphaConvert&quot;:{&quot;RGB&quot;:&quot;RGBA&quot;,&quot;HSL&quot;:&quot;HSLA&quot;,&quot;HEX&quot;:&quot;RGBA&quot;,&quot;NAMESPACE&quot;:&quot;RGBA&quot;},&quot;shortenHex&quot;:false,&quot;hexUseName&quot;:false,&quot;reduceAlpha&quot;:true,&quot;nameDegradation&quot;:&quot;HEX&quot;,&quot;invalidValue&quot;:&quot;&quot;,&quot;zeroAlphaAsTransparent&quot;:true}" value="" class="pj-colorPicker pj-input" placeholder="choose color">
  </section>
</section>
<script type="text/javascript">
  (function () {
    Pj.colorPicker('[data-plugin]')
    const data = {
        scheme: {
          'Primary': '#55a4f2',
          'fontColor': '#ccc',
          'bg Color': '#f2a654',
          'border Color': '#f1f1f1'
        },
        favorites: {
          'red': 'red',
          'brown': 'brown',
          'lightblue': 'lightblue',
          'green': 'green',
          'alphaTest': 'rgba(210,133,89,.3)',
          'Gradient Bg': 'linear-gradient(90deg, #fff 0%,#2aaedc 40%, #000 100%)'
        }
      };
    Pj.colorPicker.setCollectionData(data);

    var api = {}

    function init() {
      api = Pj.colorPicker('.example-api', {
        gradientMode: 'radial',
        onReady: function() {
          log('ready', 'event');
        },
        onDestroy: function() {
          log('destroy', 'event');
        },
        onEnable: function() {
          log('enable', 'event');
        },
        onDisable: function() {
          log('disable', 'event');
        },
        onChange: function(val) {
          log('change: '+JSON.stringify(val), 'event');
        },
        onUpdate: function(val) {
          log('update: '+JSON.stringify(val), 'event');
        },
      });
    }

    document.querySelector('.api-init').addEventListener('click', function(){
      init()
    })

    document.querySelector('.api-set').addEventListener('click', function(){
      log(api.set({"module":"collection","color":"border Color"}), 'set({"module":"collection","color":"border Color"})');
    })

    document.querySelector('.api-get').addEventListener('click', function(){
      log(JSON.stringify(api.get()), 'get()');
    })

    document.querySelector('.api-val').addEventListener('click', function(){
      log(api.val(), 'val()');
    })

    document.querySelector('.api-destroy').addEventListener('click', function(){
      api.destroy()
    })

    document.querySelector('.api-disable').addEventListener('click', function(){
      api.disable()
    })

    document.querySelector('.api-enable').addEventListener('click', function(){
      api.enable()
    })

    document.querySelector('.api-val-set').addEventListener('click', function(){
      log(api.val('linear-gradient(90deg, #fff 0%,#2aaedc 40%, lightblue 100%)'), 'val(red)');
    })

    document.querySelector('.api-clear').addEventListener('click', function(){
      log(api.clear(), 'api.clear()');
    })

    // initialized by input value
    Pj.colorPicker('.input');
  
    //locale
    Pj.colorPicker('.locale', {
      locale: 'zh'
    });

    // Modules
    var onlyCollection = Pj.colorPicker('.module-collection', {
      module: ['collection']
    })

    var solidAndGradient = Pj.colorPicker('.module-solid-gradient', {
      module: ['solid', 'gradient']
    })

    // solid mode
    var solidFull = Pj.colorPicker('.solid-full', {
      module: ['solid'],
      solidMode: 'full'
    });

    var solidDefault = Pj.colorPicker('.solid-default', {
      module: ['solid'],
      solidMode: 'default'

    });

    var solidSample = Pj.colorPicker('.solid-sample', {
      module: ['solid'],
      solidMode: 'sample'
    });

    // solid custom Modules
    var solidModules = Pj.colorPicker('.solid-modules', {
      module: ['solid'],
        solidModule: {
          saturation: true,
          hue: true,
          alpha: false,
          hex: false
        }
    })
  })();

</script>
