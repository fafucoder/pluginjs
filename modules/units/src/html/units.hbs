---
title: Units
layout: plugin
styles:
- ../../plugins/dropdown/css/dropdown.css
- ../../plugins/units/css/units.css
scripts:
- ../../plugins/units/units.js
---

<section>
  <h2>Default</h2>
{{#code}}
  <input type="text" class="example-default">
  <script>
  (function(){
    Pj.units('.example-default', {
        data: ['px','%']
      });
    })();
  </script>
{{/code}}
  <div class="example">
    <input type="text" class="example-default">
  </div>
  <script>
    (function(){
      Pj.units('.example-default', {
        data: ['px','%']
      });
    })();
  </script>
</section>

<section>
  <h2>Initialized by input value</h2>
{{#code}}
  <input type="text" class="example-input" value="10px">
  <script>
  (function(){
    Pj.units('.example-input', {
        data: ['px','%']
      });
    })();
  </script>
{{/code}}
  <div class="example">
    <input type="text" class="example-input" value="10px">
  </div>
  <script>
    (function(){
      Pj.units('.example-input', {
        data: ['px','%']
      });
    })();
  </script>
</section>

<section>
  <h2>Disabled</h2>
{{#code}}
  <div class="example-disabled"></div>
  <script>
    (function(){
      Pj.units('.example-disabled', {
        disabled: true,
        data: ['px']
      });
    })();
  </script>
{{/code}}
  <div class="example">
    <div class="example-disabled"></div>
  </div>
  <script>
    (function(){
      Pj.units('.example-disabled', {
        disabled: true,
        data: ['px']
      });
    })();
  </script>
</section>
<section>
  <h2>WordPress demo</h2>
{{#code}}
  <div class="example">
    <input id="units" name="units" data-plugin="units" data-disabled="false" data-data="[&quot;px&quot;,&quot;%&quot;]" data-placement="bottom-left" data-default-unit="%" value="" type="text" class="pj-units">
  </div>
  <script>
    (function(){
      Pj.units('[data-plugin]');
    })();
  </script>
{{/code}}
  <div class="example">
    <input id="units" name="units" data-plugin="units" data-disabled="false" data-data="[&quot;px&quot;,&quot;%&quot;]" data-placement="bottom-left" data-default-unit="%" value="" type="text" class="pj-units">
  </div>
  <script>
    (function(){
      Pj.units('[data-plugin]');
    })();
  </script>
</section>
<section>
  <h2>Api</h2>
  <input type="text" class="example-api">
  <div>
    <button class="btn api-init">init()</button>
    <button class="btn api-set">set(data)</button>
    <button class="btn api-get">get()</button>
    <button class="btn api-get-unit">get(unit)</button>
    <button class="btn api-val">val()</button>
    <button class="btn api-val-set">val(data)</button>
    <button class="btn api-destroy">destroy()</button>
    <button class="btn api-enable">enable()</button>
    <button class="btn api-disable">disable()</button>
  </div>
  <div class="console"></div>
  <script>
    (function() {
      var events = ['ready', 'enable', 'disable', 'destroy'];

      for(var i = 0; i < events.length; i++) {
       document.querySelector('.example-api').addEventListener('units:'+events[i], function(event, instance) {
         console.log(event.type, 'event');
       });
      }
      var unitsApi = {}

      function init() {
        unitsApi = Pj.units('.example-api', {
          data: ['px','%'],
          onChange: function(value) {
           console.log('change' + JSON.stringify(value), 'event');
          },
          onUpdate: function(value) {
           console.log('update' + JSON.stringify(value), 'event');
          },
          onSubmit: function(value) {
           console.log('submit' + JSON.stringify(value), 'event');
          },
          onSetunit: function(value) {
           console.log('setunit' + JSON.stringify(value), 'event');
          },
          onChangeVal: function(value) {
           console.log('changeVal' + JSON.stringify(value), 'event');
          }
        });
      }

      document.querySelector('.api-init').addEventListener('click', function() {
        init();
      });

      document.querySelector('.api-set').addEventListener('click', function() {
        unitsApi('set', {
          unit: '%',
          value: 20
        });
        console.log('', 'set(data)');
      });
      document.querySelector('.api-get').addEventListener('click', function() {
        console.log(JSON.stringify(unitsApi('get')), 'get()');
      });
      document.querySelector('.api-get-unit').addEventListener('click', function() {
        console.log(JSON.stringify(unitsApi('get', 'px')), 'get("px")');
      })
      document.querySelector('.api-val').addEventListener('click', function() {
        console.log(unitsApi('val'), 'val()');
      });
      document.querySelector('.api-val-set').addEventListener('click', function() {
        unitsApi('val', '{"unit":"px","value":"30"}');
        console.log('', 'val(data)');
      });
      document.querySelector('.api-disable').addEventListener('click', function() {
        unitsApi('disable')
      });
      document.querySelector('.api-enable').addEventListener('click', function() {
        unitsApi('enable')
      });
      document.querySelector('.api-destroy').addEventListener('click', function() {
        unitsApi('destroy')
      });
    })();
  </script>
</section>
