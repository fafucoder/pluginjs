---
title: Rate
layout: plugin
styles:
- ../../css/styles.css
- ../../plugins/rate/css/rate.css
scripts:
- ../../plugins/rate/rate.js
---
<style>
  .item {
    margin-left: 100px;
  }
  .score {
    display: inline-block;
    margin-left: 50px;
  }
</style>

<section>
  <h2>Basic usage</h2>
  <input class="basic" type="number" data-min="0" data-max="5" data-value="3" data-step="1" />
  <script>
    Pj.rate('.basic')
  </script>
</section>
<section>
  <h2>Svg Example</h2>
  <input class="svgExample" type="number" data-min="0" data-max="5" data-value="2.5"/>
  <script>
    Pj.rate('.svgExample', {
      svg: {
        clearPath: '../../plugins/rate/assets/clearStar.svg',
        defaultPath: '../../plugins/rate/assets/defaultStar.svg'
      }
    })
  </script>
</section>
<section>
  <h2>Number</h2>
  <div class="number"></div>
  <div class="score numberscore">score: 0</div>
  <script>
    const api2 = Pj.rate('.number', {
      max: 7,
      onChangeHoverScore: function() {
        // var hoverScore = $('.number').asRate('getHoverScore')
        var hoverScore = api2('getHoverScore')

        var t = 'score: ' + hoverScore
        $('.numberscore').text(t)
      },
      onChangeScore: function() {
        console.log('onChangeScore')
      },
      onMouseLeave: function() {
        // var score = $('.number').asRate('getScore')
        var score = api2('getScore')
        var t = 'score: ' + score
        $('.numberscore').text(t)
      },
    })
  </script>
</section>
<section>
  <h2>step: 1</h2>
  <div class="fullStar"></div>
  <div class="score fullStarscore">score: 0</div>
  <script>
    const api1 = Pj.rate('.fullStar', {
      max: 7,
      step: 1,
      onChangeHoverScore: function() {
        // var hoverScore = $('.fullStar').asRate('getHoverScore')
        var hoverScore = api1('getHoverScore')

        // console.log('onChangeHoverScore', score)
        var t = 'score: ' + hoverScore
        $('.fullStarscore').text(t)
      },
      onChangeScore: function() {
        console.log('onChangeScore')
      },
      onMouseLeave: function() {
        // console.log('onMouseLeave')
        // var score = $('.fullStar').asRate('getScore')
        var score = api1('getScore')
        var t = 'score: ' + score
        $('.fullStarscore').text(t)
      },
    })
  </script>
</section>
<section>
  <h2>Read only</h2>
  <div class="readonly"></div>
  <script>
    Pj.rate('.readonly', {
      max: 5,
      readonly: true,
      value: 2.5,
    })
  </script>
</section>
<section>
  <h2>iconSize</h2>
  <div class="iconSize"></div>
  <script>
    Pj.rate('.iconSize', {
      value: 5,
      iconSize: '20px',
    })
  </script>
</section>
<section>
  <h2>other charecter</h2>
  <div class="iconClass"></div>
  <script>
    Pj.rate('.iconClass', {
      value: 5,
      iconClass: 'icon-smile',
    })
  </script>
</section>
<section>
  <h2>API</h2>
  <div class="api"></div>
  <div class="score apireturn">API return: 0</div>
  <div>
    <button class="button apireadonly">readonly: false</button>
    <button class="button setScore">setScore: 3</button>
    <button class="button getScore">getScore</button>
    <button class="button getHoverScore">getHoverScore</button>
    <button class="button clear">clear</button>
    <button class="button destroy">destroy</button>
  </div>
  <div style="margin-top: 20px;"></div>

  <div class="text"></div>
  <div class="score text11">score: 0</div>
  <div>
    <button class="button setColor">setColor</button>
    <button class="button resetIcon">resetIcon</button>
  </div>
  <div class="console"></div>
  <script>
    // $(function(){
      Pj.rate('.api', {
        max: 5,
        onChangeHoverScore: function(score) {
          console.log('changeHoverScore: ' + score, 'event');
        },
        onChangeScore: function(score) {
          console.log('changeScore: ' + score, 'event');
        },
        onClick: function(score) {
          console.log('click: ' + score, 'event');
        },
        onMouseLeave: function(score) {
          console.log('moseleave', 'event');
        },
        onReady: function() {
          console.log('ready', 'event');
        },
        onDestroy: function() {
          console.log('destroy', 'event');
        }
      })
      // $('.setScore').on('click', function() {
      //   rateApi('setScore', 3)
      // })
      // $('.destroy').on('click', function() {
      //   rateApi('destroy')
      // })
      // $('.getScore').on('click', function() {
      //   var score = rateApi('getScore')
      //   console.log('score:', score)
      //   var t = 'score: ' + score
      //   $('.apireturn').text(t)
      // })
      // $('.getHoverScore').on('click', function() {
      //   var score = rateApi('getHoverScore')
      //   var t = 'HoverScore: ' + score
      //   $('.apireturn').text(t)
      // })
      // $('.clear').on('click', function() {
      //   rateApi('clear')
      // })
      // var apireadonly =- false
      // $('.apireadonly').on('click', function() {
      //   apireadonly = !apireadonly
      //   rateApi('readonly', apireadonly)
      //   var t = 'readonly: ' + apireadonly
      //   $('.apireadonly').text(t)
      // })
    //   //fullStar
    //   $('.text').asRate({
    //     max: 5,
    //     step: 1,
    //     iconClass: 'icon-smile',
    //     onChangeHoverScore: function() {
    //       var hoverScore = $('.text').asRate('getHoverScore')
    //       if (hoverScore <= 1) {
    //         $('.text').asRate('setColor', 'pj-rate-danger')
    //         $('.text').asRate('resetIcon', 'icon-times-circle')
    //       } else if(hoverScore <= 3 && hoverScore > 1){
    //         $('.text').asRate('setColor', 'pj-rate-danger')
    //         $('.text').asRate('resetIcon', 'icon-exclamation-circle')
    //       } else {
    //         $('.text').asRate('setColor', 'pj-rate-default-color')
    //         $('.text').asRate('resetIcon', 'icon-smile')
    //       }
    //       var t = 'score: ' + hoverScore
    //       $('.text11').text(t)
    //     },
    //     onChangeScore: function() {
    //       console.log('onChangeScore')
    //     },
    //     onMouseLeave: function() {
    //       var score = $('.text').asRate('getScore')
    //       if (score <= 1 && score > 0) {
    //         $('.text').asRate('setColor', 'pj-rate-danger')
    //         $('.text').asRate('resetIcon', 'icon-times-circle')
    //       } else if(score <= 3 && score > 1){
    //         $('.text').asRate('setColor', 'pj-rate-danger')
    //         $('.text').asRate('resetIcon', 'icon-exclamation-circle')
    //       } else if(score == 0){
    //         $('.text').asRate('setColor', 'pj-rate-clear-color')
    //         $('.text').asRate('resetIcon', 'icon-smile')
    //       } else {
    //         $('.text').asRate('setColor', 'pj-rate-default-color')
    //         $('.text').asRate('resetIcon', 'icon-smile')
    //       }
    //       var t = 'score: ' + score
    //       $('.text11').text(t)
    //       // $('.text').asRate('resetIcon', 'icon-smile')
    //     },
    //   })
    //
    //   $('.setColor').on('click', function() {
    //     console.log("set color")
    //     $('.text').asRate('setColor', 'pj-rate-danger')
    //   })
    //
    //   $('.resetIcon').on('click', function() {
    //     $('.text').asRate('resetIcon', 'icon-smile')
    //   })
    // })
  </script>
</section>
