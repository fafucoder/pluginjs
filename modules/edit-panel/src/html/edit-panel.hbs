---
title: EditPanel
layout: plugin
styles:
- ../../plugins/dropdown/css/dropdown.css
- ../../plugins/tooltip/css/tooltip.css
- ../../plugins/scrollbar/css/scrollbar.css
- ../../plugins/scrollable/css/scrollable.css
- ../../plugins/color-picker/css/color-picker.css
- ../../plugins/modal/css/modal.css
- ../../plugins/edit-panel/css/edit-panel.css
scripts:
- ../../plugins/edit-panel/edit-panel.js
- ../../plugins/pluginjs/pluginjs.common.js
- ../../vendor/popper.js
- ../../vendor/hammer.min.js
- ../../plugins/tooltip/tooltip.js
- ../../plugins/dropdown/dropdown.js
- ../../plugins/scrollbar/scrollbar.js
- ../../plugins/scrollable/scrollable.js
- ../../plugins/color-picker/color-picker.js
---
<section>
  <h3>Default</h3>
  <input type='text' class="example-basic" />

  <div class="console"></div>

  <button class="btn api-init">init</button>
  <button class="btn api-destroy">destroy</button>
  <button class="btn api-enable">enable</button>
  <button class="btn api-disable">disable</button>
  <button class="btn api-get">get</button>
  <button class="btn api-set">set</button>
  <button class="btn api-val-info">val(info)</button>
  <button class="btn api-val">val</button>
</section>

<script>
  (function () {
    const $component_1 = document.createElement('input')
    $component_1.classList.add('component-1')
    const $custom_1 = document.createElement('div')
    $custom_1.classList.add('custom-1')

    let api = {}
    function init() {
      api = Pj.editPanel('.example-basic', {
        pluginName: 'fremango',
        components:[{
          title: 'component-1',
          element: $component_1,
          options: {
            theme: 'default',
            alpha: false
          },
          type: 'colorPicker'
        }, {
          title:'custom-1',
          element: $custom_1
        }],
        onReady: function() {
          log('ready', 'event');
        },
        onDestroy: function() {
          log('destroy', 'event');
        },
        onEnable: function() {
          log('enable', 'event');
        },
        onDisable: function() {
          log('disable', 'event');
        }
      });
    }

    document.querySelector('.api-init').addEventListener('click', function() {
      init();
    });

    document.querySelector('.api-enable').addEventListener('click', function() {
      api.enable();
    });
    document.querySelector('.api-disable').addEventListener('click', function() {
      api.disable();
    });
    document.querySelector('.api-destroy').addEventListener('click', function() {
      api.destroy();
    });

    // var $console = $('.console');
    // $('.api-get').on('click', function(){
    //   var $data = $('<p> api-get ==> '+api.get()+'</p>');
    //   $console.prepend($data);
    // });

    // $('.api-val').on('click', function(){
    //   var $data = $('<p> api-val ==> '+api.val()+'</p>');
    //   $console.prepend($data);
    // });

    // $('.api-set').on('click', function(){
    //   api.set(example_data);
    //   var $data = $('<p>==> api-set <==</p>');
    //   $console.prepend($data);
    // });

    // $('.api-val-info').on('click', function(){
    //   api.val(example_data);
    //   var $data = $('<p>==> api-val-info <==</p>');
    //   $console.prepend($data);
    // });

  })();
</script>
